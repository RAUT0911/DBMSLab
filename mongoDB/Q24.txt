DYPIT> use Games
switched to db Games
1. Create a collection called ‘games’.
Games> db.createCollection('games')
{ ok: 1 }
2. Add 5 games to the database. Give each document the following properties: 
name, gametype, rating (out of 100).
Games> db.games.insertMany([
...   { name: 'Game A', gametype: 'Action', rating: 90 },
...   { name: 'Game B', gametype: 'RPG', rating: 88 },
...   { name: 'Game C', gametype: 'Puzzle', rating: 95 },
...   { name: 'Game D', gametype: 'Strategy', rating: 92 },
...   { name: 'Game E', gametype: 'Adventure', rating: 87 }
... ])

{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("6549c16d4d30ec747137a6f3"),
    '1': ObjectId("6549c16d4d30ec747137a6f4"),
    '2': ObjectId("6549c16d4d30ec747137a6f5"),
    '3': ObjectId("6549c16d4d30ec747137a6f6"),
    '4': ObjectId("6549c16d4d30ec747137a6f7")
  }
}
Games>
3.Write a query that returns all the games.
Games> db.games.find({})
[
  {
    _id: ObjectId("6549c16d4d30ec747137a6f3"),
    name: 'Game A',
    gametype: 'Action',
    rating: 90
  },
  {
    _id: ObjectId("6549c16d4d30ec747137a6f4"),
    name: 'Game B',
    gametype: 'RPG',
    rating: 88
  },
  {
    _id: ObjectId("6549c16d4d30ec747137a6f5"),
    name: 'Game C',
    gametype: 'Puzzle',
    rating: 95
  },
  {
    _id: ObjectId("6549c16d4d30ec747137a6f6"),
    name: 'Game D',
    gametype: 'Strategy',
    rating: 92
  },
  {
    _id: ObjectId("6549c16d4d30ec747137a6f7"),
    name: 'Game E',
    gametype: 'Adventure',
    rating: 87
  }
]
4. Write a query that returns the 3 highest rated games.
Games> db.games.find({}).sort({ rating: -1 }).limit(3)
[
  {
    _id: ObjectId("6549c16d4d30ec747137a6f5"),
    name: 'Game C',
    gametype: 'Puzzle',
    rating: 95
  },
  {
    _id: ObjectId("6549c16d4d30ec747137a6f6"),
    name: 'Game D',
    gametype: 'Strategy',
    rating: 92
  },
  {
    _id: ObjectId("6549c16d4d30ec747137a6f3"),
    name: 'Game A',
    gametype: 'Action',
    rating: 90
  }
]
5.Update your two favourite games to have two achievements called ‘Game 
Master’ and ‘Speed Demon’.
Games> db.games.updateMany(
...   { name: { $in: ['Game A', 'Game C'] } },
...   {
...     $set: {
...       achievements: ['Game Master', 'Speed Demon']
...     }
...   }
... )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 2,
  modifiedCount: 2,
  upsertedCount: 0
}
6. Write a query that returns all the games that have both the ‘Game Maser’ and the ‘Speed Demon’ achievements.
Games> db.games.find({
...   achievements: {
...     $all: ['Game Master', 'Speed Demon']
...   }
... })
[
  {
    _id: ObjectId("6549c16d4d30ec747137a6f3"),
    name: 'Game A',
    gametype: 'Action',
    rating: 90,
    achievements: [ 'Game Master', 'Speed Demon' ]
  },
  {
    _id: ObjectId("6549c16d4d30ec747137a6f5"),
    name: 'Game C',
    gametype: 'Puzzle',
    rating: 95,
    achievements: [ 'Game Master', 'Speed Demon' ]
  }
]
7. Write a query that returns only games that have achievements.
Games> db.games.find({
...   achievements: { $exists: true }
... })
[
  {
    _id: ObjectId("6549c16d4d30ec747137a6f3"),
    name: 'Game A',
    gametype: 'Action',
    rating: 90,
    achievements: [ 'Game Master', 'Speed Demon' ]
  },
  {
    _id: ObjectId("6549c16d4d30ec747137a6f5"),
    name: 'Game C',
    gametype: 'Puzzle',
    rating: 95,
    achievements: [ 'Game Master', 'Speed Demon' ]
  }
]
Games>